continue
block.call
continue
content_tag
continue
ActionView
continue
content_tag
helpers.methods
helpers.class
helpers
continue
options[:html][:class] = combined_class
options[:html][:class]
options[:html]
options[:html] ||= {}
options[:html]
a[:new]||= {}
a = {}
a[:new]||= {}
options[:html]
options.html.class = combined_class
options.dig(:html, :class)  = combined_class
options.dig(:html, :class)
options[:html][:class]
continue
options[:html][:class]
options
continue
model.methods
model.image_tag
model.content_tag
image_tag
link_to
continue
model.link_to
middleman_app
model.link_to
model
continue
link_to
continue
middleman_app
continue
 button_class({type: options[:type],ghost: options[:ghost],block: options[:block]})
continue
"#{button_type(type)}#{ghost?(ghost)}#{block?(block)}"
button_type(type)
type
continue
locals
options
continue
options
option
continue
options
continue
locals
cell_method
continue
cell_method
locals
continue
cell_method
locals
continue
cell_method
locals
continue
cell_method
locals
continue
model.link_to
model.middleman
model.app
model
continue
options
continue
options[:middleman_app].link_to
options[:middleman_app]
continue
options
model
middleman_app
continue
middleman_app
model.middleman_app
model
modle
continue
middleman_app
@middleman_app
model[:middleman_app]
model
middleman_app
model
continue
model
options[:middleman_app]
options
model.middleman_app
model
middleman_app
continue
model
continue
options
continue
options
continue
options
continue
options
continue
@options
continue
@options
locals
options
continue
middlemanapp
continue
middlemanapp
app
continue
app.link_to
app
link_to
continue
app.class
app.link_to
middleman_app
app
link_to
continue
Middleman::Renderers::ERb
Middleman::Renderers::ERb.methods
Middleman::Renderers::ERb
end
  Middleman::Renderers::ERb
  require 'middleman-core/renderers/erb'
Middleman::Extensions.register :erb_renderer, auto_activate: :before_configuration do
main_navigation
link_to
continue
self.class.ancestors
self.class.methods
self.class.class
puts self.class
self.class.public_constant
self.class
self.type
self.class.methods
self.class.method
self.class
self.clss
self
continue
link_to
continue
block.call
capture &block
block
continue
capture(&block)
block
block.call
continue
block.call
continue
block.call
continue
block.call
block
continue
instance_eval block.call
instance_eval block
block.call
block
continue
block
&block
yield
block
